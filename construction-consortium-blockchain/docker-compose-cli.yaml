# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

# volumes:
#   orderer.track.com:
#   peer0.cst.track.com:
#   peer0.sup.track.com:
#   peer0.reg.track.com:

networks:
  byfn:

services:

  # ca0:
  #   image: hyperledger/fabric-ca:$IMAGE_TAG
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca-cst
  #     - FABRIC_CA_SERVER_TLS_ENABLED=true
  #     - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.cst.track.com-cert.pem
  #     - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${BYFN_CA1_PRIVATE_KEY}
  #     - FABRIC_CA_SERVER_PORT=7054
  #   ports:
  #     - "7054:7054"
  #   command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.cst.track.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/${BYFN_CA1_PRIVATE_KEY} -b admin:adminpw -d'
  #   volumes:
  #     - ./crypto-config/peerOrganizations/cst.track.com/ca/:/etc/hyperledger/fabric-ca-server-config
  #   container_name: ca-cst
  #   networks:
  #     - byfn

  orderer.track.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer.track.com
    container_name: orderer.track.com
    networks:
      - byfn

  couchdbcst:
    container_name: couchdbcst
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - byfn
    volumes:
      - ./volume/couchdbcst/:/opt/couchdb/data


  couchdbsup:
    container_name: couchdbsup
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6984:5984"
    networks:
      - byfn
    volumes:
      - ./volume/couchdbsup/:/opt/couchdb/data      

  couchdbreg:
    container_name: couchdbreg
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "7984:5984"
    networks:
      - byfn
    volumes:
      - ./volume/couchdbreg/:/opt/couchdb/data

  peer0.cst.track.com:
    container_name: peer0.cst.track.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.cst.track.com
    networks:
      - byfn

  peer0.sup.track.com:
    container_name: peer0.sup.track.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.sup.track.com
    networks:
      - byfn

  peer0.reg.track.com:
    container_name: peer0.reg.track.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.reg.track.com
    networks:
      - byfn

  cli_cst:
    container_name: cli_cst
    image: hyperledger/fabric-tools:$IMAGE_TAG
    tty: true
    stdin_open: true
    environment:
      - SYS_CHANNEL=$SYS_CHANNEL
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli_cst
      - CORE_PEER_ADDRESS=peer0.cst.track.com:7051
      - CORE_PEER_LOCALMSPID=CSTMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/cst.track.com/peers/peer0.cst.track.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/cst.track.com/peers/peer0.cst.track.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/cst.track.com/peers/peer0.cst.track.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/cst.track.com/users/Admin@cst.track.com/msp
      - ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/track.com/orderers/orderer.track.com/msp/tlscacerts/tlsca.track.com-cert.pem
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.track.com
      - peer0.cst.track.com
    networks:
      - byfn


  cli_sup:
    container_name: cli_sup
    image: hyperledger/fabric-tools:$IMAGE_TAG
    tty: true
    stdin_open: true
    environment:
      - SYS_CHANNEL=$SYS_CHANNEL
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli_sup
      - CORE_PEER_ADDRESS=peer0.sup.track.com:9051
      - CORE_PEER_LOCALMSPID=SUPMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/sup.track.com/peers/peer0.sup.track.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/sup.track.com/peers/peer0.sup.track.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/sup.track.com/peers/peer0.sup.track.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/sup.track.com/users/Admin@sup.track.com/msp
      - ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/track.com/orderers/orderer.track.com/msp/tlscacerts/tlsca.track.com-cert.pem
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.track.com
      - peer0.sup.track.com
    networks:
      - byfn

  cli_reg:
    container_name: cli_reg
    image: hyperledger/fabric-tools:$IMAGE_TAG
    tty: true
    stdin_open: true
    environment:
      - SYS_CHANNEL=$SYS_CHANNEL
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli_reg
      - CORE_PEER_ADDRESS=peer0.reg.track.com:11051
      - CORE_PEER_LOCALMSPID=REGMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.track.com/peers/peer0.reg.track.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.track.com/peers/peer0.reg.track.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.track.com/peers/peer0.reg.track.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.track.com/users/Admin@reg.track.com/msp
      - ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/track.com/orderers/orderer.track.com/msp/tlscacerts/tlsca.track.com-cert.pem
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.track.com
      - peer0.reg.track.com
    networks:
      - byfn      